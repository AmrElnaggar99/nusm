{"version":3,"sources":["main.js","sidebar.js","Slot.js","Schedule.js","App.js","serviceWorker.js","index.js"],"names":["CULTURE_SHIPS","id","name","Sidebar","state","selectedShips","handleSelectionChange","setState","index","this","slice","splice","Fragment","Col","md","lg","className","style","height","props","chooseCourses","isPhone","onClick","toggleChangeCourses","icon","faChevronDown","display","length","map","ship","i","key","type","handleDeselect","required","value","onChange","options","selectedOptions","textProp","valueProp","Component","Slot","visibility","course","color","Schedule","slots","days","Container","timetable","layout","Row","xs","Math","random","el","idx","subel","final_subel","substring","courseColors","Object","keys","day","courses","colors","courses_colors","MainApp","randomColor","darkmode","changeMode","faMoon","changeLayout","faGripVertical","faGripHorizontal","schedules","xl","cardWidth","App","window","innerWidth","sun","mon","tue","wed","thu","prev","toLayout","width","document","body","classList","remove","add","fluid","exact","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79984874.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport Schedule from './Schedule';\r\nimport './App.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faMoon, faGripHorizontal, faGripVertical } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlet courses = ['Safety', 'ECEN302', 'ECEN306', 'ECEN304', 'HUMA102', 'IENG301', 'ECEN402']\r\nlet colors = ['orange', 'pink', 'purple', 'green', 'blue', 'yellow', 'teal', 'red']\r\nlet courses_colors = {}\r\n\r\nfor (let i = 0; i < courses.length; i++) {\r\n    courses_colors[courses[i]] = colors[i]\r\n}\r\nclass MainApp extends Component {\r\n\r\n    randomColor = () => {\r\n        return colors[colors.length * Math.random() << 0];\r\n    };\r\n    render() {\r\n        return (\r\n            this.props.chooseCourses ? \r\n                <Col md={8} lg={9}>\r\n                <div className=\"main-app\">\r\n                    <Row>\r\n                        <Container>\r\n                            <div className='schedules-head'>\r\n                                <h2>Possible Schedules</h2>\r\n                                <span id=\"change_mode\">\r\n                                    Mode:\r\n                                    <button className={this.props.darkmode ? 'active' : \"\"} onClick={() => this.props.changeMode()}><FontAwesomeIcon icon={faMoon} /></button>\r\n                                </span>\r\n                                <span id='change_layout'>\r\n                                    Layout:\r\n                                    <button className={this.props.layout === 'vertical' ? 'active' : \"\"} onClick={() => this.props.changeLayout('vertical')}><FontAwesomeIcon icon={faGripVertical} /></button>\r\n                                    <button className={this.props.layout === 'horizontal' ? 'active' : \"\"} onClick={() => this.props.changeLayout('horizontal')}><FontAwesomeIcon icon={faGripHorizontal} />\r\n                                    </button>\r\n                                </span>\r\n                            </div>\r\n                        </Container>\r\n                    </Row>\r\n                    <div className={`schedule-cards ${this.props.layout}-cards`}>\r\n\r\n                        <Row>\r\n                            {this.props.schedules.map((el, index) => (\r\n                                <Col key={index}  md={12} xl={this.props.cardWidth ? this.props.cardWidth : \"\"} lg={6} >\r\n                                    <Schedule layout={this.props.layout ? this.props.layout : \"\"} courseColors={courses_colors} timetable={this.props.schedules ? el : \"\"} />\r\n                                </Col>\r\n                            ))}\r\n\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n                : \"\"\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MainApp;","import React, { Component } from 'react';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport FilteredMultiSelect from 'react-filtered-multiselect'\r\nimport './App.scss';\r\nimport Scrollbar from 'react-scrollbars-custom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst last_updated = \"July 17, 2020 08:45 PM\";\r\nconst CULTURE_SHIPS = [\r\n    { id: 1, name: 'ECEN101' },\r\n    { id: 2, name: 'ARTS108' },\r\n    { id: 3, name: 'ECEN102' },\r\n    { id: 4, name: 'ECEN203' },\r\n    { id: 5, name: 'ENGL101' },\r\n    { id: 6, name: 'ENGL102' },\r\n    { id: 7, name: 'ENGL201' },\r\n    { id: 8, name: 'ENGL202' },\r\n    { id: 9, name: 'ENGR101' },\r\n    { id: 10, name: 'ENGR102' },\r\n\r\n]\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        selectedShips: []\r\n    }\r\n    handleDeselect(index) {\r\n        var selectedShips = this.state.selectedShips.slice()\r\n        selectedShips.splice(index, 1)\r\n        this.setState({ selectedShips })\r\n    }\r\n\r\n    handleSelectionChange = (selectedShips) => {\r\n        this.setState({ selectedShips })\r\n    }\r\n\r\n    render() {\r\n        var { selectedShips } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Col md={4} lg={3}>\r\n                    <div className='phone-collapse'>\r\n                            <div className=\"select-courses\" style={{height: this.props.chooseCourses && this.props.isPhone ? 'auto' : '97vh'}}>\r\n                                <div className='main-head'>\r\n                                <h1 className=\"brand-text\">NU Schedule Maker</h1>\r\n                                {this.props.chooseCourses && this.props.isPhone ?\r\n                                <button onClick={()=> this.props.toggleChangeCourses()} className='choose-courses-btn'>\r\n                                    Change Courses\r\n                                    <FontAwesomeIcon icon={faChevronDown} />    \r\n                                    </button>\r\n                                    : \"\"\r\n                                }\r\n                                </div>\r\n                                <div className='collapse-wrapper' \r\n                                style={{display: \r\n                                this.props.isPhone ? \r\n                                this.props.chooseCourses ? 'none' : 'block'\r\n                                :  \"auto\"}}>\r\n                                <div className='head-info'>\r\n                                    <Scrollbar >\r\n                                        <div className='cofigure-courses'>\r\n                                            {selectedShips.length === 0 && <small className='notice text-center'>Double click on courses bellow to select</small>}\r\n                                            {selectedShips.length > 0 && <div>\r\n                                                <div className='slots-head'>\r\n                                                    <b>Slots per</b>\r\n                                                    <span>LE</span>\r\n                                                    <span>LAB</span>\r\n                                                    <span>Tut</span>\r\n                                                </div>\r\n                                                <ul>\r\n                                                    {selectedShips.map((ship, i) => <li key={ship.id}>\r\n                                                        <button type=\"button\" onClick={() => this.handleDeselect(i)}>\r\n                                                            &times;</button>\r\n                                                        {`${ship.name} `}\r\n                                                        <div className='slots-per'>\r\n\r\n                                                            <input required type='text' value='2'/>\r\n                                                            <input required type='text' value='1'/>\r\n                                                            <input required type='text' value='1'/>\r\n                                                        </div>\r\n                                                    </li>)}\r\n                                                </ul>\r\n                                            </div>}\r\n                                        </div>\r\n                                    </Scrollbar>\r\n                                </div>\r\n\r\n                                <div className='filter-form'>\r\n                                    <div className='select-wrapper'>\r\n                                        <FilteredMultiSelect\r\n                                            onChange={this.handleSelectionChange}\r\n                                            options={CULTURE_SHIPS}\r\n                                            selectedOptions={selectedShips}\r\n                                            textProp=\"name\"\r\n                                            valueProp=\"id\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className='btn-container'>\r\n                                        <button onClick={()=> this.props.toggleChangeCourses()} className='btn btn-success done-button'>\r\n                                            DONE\r\n                                        </button>\r\n                                    </div>\r\n                                    <small className=\"last-update-date\">updated: {last_updated}</small>\r\n                                </div>\r\n                            </div>\r\n                                </div>\r\n                    </div>\r\n                </Col>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport './App.scss';\r\n\r\n\r\nclass Slot extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ visibility: this.props.course === 'empty' ? 'hidden' : \"visible\" }} className={`single-slot ${this.props.color ? this.props.color + \"-card course-slot\" : \"\"} ${this.props.type ? this.props.type + \"-type\" : \"\"}`}>\r\n                {this.props.course ? this.props.course : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Slot","import React, { Component } from 'react';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport './App.scss';\r\nimport Slot from './Slot'\r\nclass Schedule extends Component {\r\n    slots = ['8:30', '9:30', '10:30', '11:30', '12:30', '1:30', '2:30', '3:30', '4:30']\r\n    days = ['sun','mon','tue','wed','thu']\r\n    render() {\r\n\r\n        return (\r\n            <div className={`schedule-card`}>\r\n                <Container>\r\n                    {this.props.timetable ?\r\n                        this.props.layout === 'vertical' ?\r\n                            <Row>\r\n                                <Col className='no-pad' xs={2}>\r\n                                    <Slot key={Math.random()} type=\"head\"></Slot>\r\n                                    {this.slots.map(el => (\r\n                                        <Slot type='side' course={el} key={el}></Slot>\r\n                                    ))}\r\n                                </Col>\r\n                                {this.days.map((el, idx) => (\r\n                                    <Col className='no-pad' key={idx} xs={2}>\r\n                                        <Slot type='head' course={el} key={el}></Slot>\r\n                                        {this.props.timetable[el].map((subel, index) => {\r\n                                            let final_subel = subel;\r\n                                            if (subel[subel.length - 1] === 'T' || subel[subel.length - 1] === 'L') {\r\n                                                final_subel = subel.substring(0, subel.length - 1)\r\n                                            }\r\n                                            return (\r\n                                                <Slot key={index} type='side' course={subel} color={this.props.courseColors[final_subel]}></Slot>\r\n                                            )\r\n                                        })}\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                            : <Row>\r\n                                <Col xs={1}>\r\n                                    <Slot key={Math.random()} type='head' course={'empty'}></Slot>\r\n                                    {Object.keys(this.props.timetable).map((el,id) => (\r\n                                        <Slot type='side' course={el} key={id}></Slot>))}\r\n                                </Col>\r\n                                {this.slots.map((el, idx) => {\r\n                                    return (\r\n                                        <Col className='no-pad' key={idx} xs={1}>\r\n                                            <Slot type='side' course={el} key={idx}></Slot>\r\n                                            {\r\n                                                Object.keys(this.props.timetable).map((day,index) => {\r\n                                                    let subel = this.props.timetable[day][idx];\r\n                                                    let final_subel = subel;\r\n                                                    if (subel[subel.length - 1] === 'T' || subel[subel.length - 1] === 'L') {\r\n                                                        final_subel = subel.substring(0, subel.length - 1)\r\n                                                    }\r\n                                                    return (\r\n                                                        <Slot key={index} type='head' course={subel} color={this.props.courseColors[final_subel]}></Slot>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n                                        </Col>\r\n                                    )\r\n                                })}\r\n                            </Row>\r\n                        : \"\"}\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Schedule;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Sidebar from './sidebar';\nimport MainApp from './main.js';\nimport { Container, Row } from 'react-bootstrap';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    isPhone: window.innerWidth < 768 ? true : false,\n    layout: 'vertical',\n    // layout: 'horizontal',\n    cardWidth: 4,\n    darkmode: true,\n    chooseCourses: false,\n    schedules:\n      [\n        {\n          sun: ['Safety', 'Safety', \"empty\", \"empty\", \"empty\", \"empty\", \"empty\", \"empty\", \"empty\"],\n          mon: ['ECEN304T', 'ECEN304T', 'ECEN402', 'ECEN402', \"empty\", 'ECEN402T', 'ECEN402T', 'ECEN306T', 'ECEN306L'],\n          tue: ['ECEN302', 'ECEN302', 'ECEN304', 'ECEN304', 'ECEN306', 'ECEN306', 'ECEN302T', 'ECEN302T', 'empty'],\n          wed: [\"empty\", \"empty\", 'ECEN306T', 'ECEN306T', \"empty\", \"empty\", \"empty\", \"empty\", \"empty\"],\n          thu: [\"empty\", 'HUMA102', 'IENG301', 'IENG301', 'Safety', 'Safety', 'IENG301T', 'IENG301T', 'empty'],\n        },\n        {\n          sun: ['ECEN302', 'ECEN302', 'ECEN304', 'ECEN304', 'ECEN306', 'ECEN306', 'ECEN302T', 'ECEN302T', 'empty'],\n          mon: ['ECEN304T', 'ECEN304T', 'ECEN402', 'ECEN402', \"empty\", 'ECEN402T', 'ECEN402T', 'ECEN306T', 'ECEN306L'],\n          tue: ['Safety', 'Safety', \"empty\", \"empty\", \"empty\", \"empty\", \"empty\", \"empty\", \"empty\"],\n          wed: [\"empty\", 'HUMA102', 'IENG301', 'IENG301', 'Safety', 'Safety', 'IENG301T', 'IENG301T', 'empty'],\n          thu: [\"empty\", \"empty\", 'ECEN306T', 'ECEN306T', \"empty\", \"empty\", \"empty\", \"empty\", \"empty\"],\n        }\n\n      ]\n  }\n\n  changeMode = () => {\n    this.setState((prev) => {\n      return ({\n        darkmode: !prev.darkmode\n      })\n    })\n  }\n\n  changeLayout = (toLayout) => {\n    let width;\n    if (toLayout === this.layout)\n      return \"\";\n    if (toLayout === 'horizontal')\n      width = 12\n    else\n      width = 4\n    this.setState({\n      layout: toLayout,\n      cardWidth: width\n    })\n  }\n\n  toggleChangeCourses = () => {\n    this.setState((prev)=>({\n        chooseCourses: !prev.chooseCourses,\n      }))\n\n    }\n\n  render() {\n    if (!this.state.darkmode) {\n        document.body.classList.add('light-mode');\n        document.body.classList.remove('dark-mode');\n      } else {\n        document.body.classList.remove('light-mode');\n        document.body.classList.add('dark-mode');\n      }\n    return (\n      <React.Fragment>\n        <Container fluid>\n          <div className= 'wrapper'>\n            <Router>\n              <Switch>\n                <Route exact path='/' render={() => (\n                  <Row className='flex-xl-nowrap'>\n                    <Sidebar isPhone={this.state.isPhone} chooseCourses={this.state.chooseCourses} toggleChangeCourses={this.toggleChangeCourses} />\n                    <MainApp isPhone={this.state.isPhone} chooseCourses={this.state.chooseCourses} changeMode={this.changeMode} darkmode={this.state.darkmode} changeLayout={this.changeLayout} layout={this.state.layout} cardWidth={this.state.cardWidth} schedules={this.state.schedules} />\n                  </Row>\n                )} />\n              </Switch>\n            </Router>\n          </div>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}